<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xiao.blog.mapper.UserMapper" >
  <resultMap id="BaseResultMap" type="com.xiao.blog.model.User" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="avatar" property="avatar" jdbcType="VARCHAR" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="phone_num" property="phoneNum" jdbcType="VARCHAR" />
    <result column="birthday" property="birthday" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="gender" property="gender" jdbcType="INTEGER" />
    <result column="description" property="description" jdbcType="VARCHAR" />
    <result column="last_login_time" property="lastLoginTime" jdbcType="TIMESTAMP" />
    <result column="login_count" property="loginCount" jdbcType="BIGINT" />
    <result column="login_time" property="loginTime" jdbcType="TIMESTAMP" />
    <result column="registered_time" property="registeredTime" jdbcType="TIMESTAMP" />
    <result column="salt" property="salt" jdbcType="VARCHAR" />
    <result column="user_ip" property="userIp" jdbcType="VARCHAR" />
    <association property="role" javaType="com.xiao.blog.model.Role">

      <id column="role_id" property="id" jdbcType="INTEGER" />
      <result column="rName" property="name" jdbcType="VARCHAR" />
      <result column="role_name" property="roleName" jdbcType="VARCHAR" />

    </association>

  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from sys_user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.xiao.blog.model.User" >
    insert into sys_user (id, user_name, `password`,
      `name`, avatar, address, 
      phone_num, birthday, email, 
      gender, description, last_login_time, 
      login_count, login_time, registered_time, 
      salt, user_ip)
    values (#{id,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{name,jdbcType=VARCHAR}, #{avatar,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, 
      #{phoneNum,jdbcType=VARCHAR}, #{birthday,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, 
      #{gender,jdbcType=INTEGER}, #{description,jdbcType=VARCHAR}, #{lastLoginTime,jdbcType=TIMESTAMP}, 
      #{loginCount,jdbcType=BIGINT}, #{loginTime,jdbcType=TIMESTAMP}, #{registeredTime,jdbcType=TIMESTAMP}, 
      #{salt,jdbcType=VARCHAR}, #{userIp,jdbcType=VARCHAR})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.xiao.blog.model.User" >
    update sys_user
    set user_name = #{userName,jdbcType=VARCHAR},
      `password` = #{password,jdbcType=VARCHAR},
      `name` = #{name,jdbcType=VARCHAR},
      avatar = #{avatar,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      phone_num = #{phoneNum,jdbcType=VARCHAR},
      birthday = #{birthday,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=INTEGER},
      description = #{description,jdbcType=VARCHAR},
      last_login_time = #{lastLoginTime,jdbcType=TIMESTAMP},
      login_count = #{loginCount,jdbcType=BIGINT},
      login_time = #{loginTime,jdbcType=TIMESTAMP},
      registered_time = #{registeredTime,jdbcType=TIMESTAMP},
      salt = #{salt,jdbcType=VARCHAR},
      user_ip = #{userIp,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select id, user_name, `password`, `name`, avatar, address, phone_num, birthday, email,
    gender, description, last_login_time, login_count, login_time, registered_time, salt, 
    user_ip
    from sys_user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap" >

  select id, user_name, `password`, `name`, avatar, address, phone_num, birthday, email,
  gender, description, last_login_time, login_count, login_time, registered_time, salt,
  user_ip
  from sys_user order by id
</select>


  <resultMap id="LoginUser" type="com.xiao.blog.vo.LoginUser" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="avatar" property="avatar" jdbcType="VARCHAR" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="phone_num" property="phoneNum" jdbcType="VARCHAR" />
    <result column="birthday" property="birthday" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="gender" property="gender" jdbcType="INTEGER" />
    <result column="description" property="description" jdbcType="VARCHAR" />
    <result column="last_login_time" property="lastLoginTime" jdbcType="TIMESTAMP" />
    <result column="login_count" property="loginCount" jdbcType="BIGINT" />
    <result column="login_time" property="loginTime" jdbcType="TIMESTAMP" />
    <result column="registered_time" property="registeredTime" jdbcType="TIMESTAMP" />
    <result column="salt" property="salt" jdbcType="VARCHAR" />
    <result column="user_ip" property="userIp" jdbcType="VARCHAR" />
    <association property="role" javaType="com.xiao.blog.vo.RoleVO">

      <id column="role_id" property="id" jdbcType="INTEGER" />
      <result column="rName" property="name" jdbcType="VARCHAR" />
      <result column="role_name" property="roleName" jdbcType="VARCHAR" />
      <collection property="permissionList" ofType="com.xiao.blog.model.Permission">
        <id column="permission_id" property="id" jdbcType="INTEGER" />
        <result column="pName" property="name" jdbcType="VARCHAR" />

      </collection>
    </association>

  </resultMap>
  <select id="getLoginUser" resultMap="LoginUser" parameterType="java.lang.String">

    select user.*,
    role.id role_id,
    role.name rName,
    role.role_name,
    permission.id permission_id,
    permission.name pName
    from sys_user user
    left join sys_user_role sur on user.id = sur.user_id
    left join sys_role role on role.id = sur.role_id
    left join sys_role_permission srp on role.id = srp.role_id
    left join sys_permission permission on permission.id = srp.permission_id
    where user_name = #{userName,jdbcType=VARCHAR}
  </select>
</mapper>