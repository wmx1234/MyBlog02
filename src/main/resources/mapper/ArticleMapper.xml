<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xiao.blog.mapper.ArticleMapper" >

    <resultMap id="BaseResultMap" type="com.xiao.blog.model.Article" >

        <id column="id" property="id" jdbcType="INTEGER" />
        <result column="article_digest" property="articleDigest" jdbcType="VARCHAR" />
        <result column="article_title" property="articleTitle" jdbcType="VARCHAR" />
        <result column="article_content" property="articleContent" jdbcType="LONGVARCHAR" />
        <result column="article_html_content" property="articleHtmlContent" jdbcType="LONGVARCHAR" />
        <result column="create_date" property="createDate" jdbcType="VARCHAR" />
        <result column="update_date" property="updateDate" jdbcType="VARCHAR" />
        <result column="likes" property="likes" jdbcType="INTEGER" />
        <result column="top" property="top" jdbcType="INTEGER" />
        <result column="draft" property="draft" jdbcType="INTEGER" />
        <result column="privacy" property="privacy" jdbcType="INTEGER" />
        <result column="categories_id" property="categoriesId" jdbcType="INTEGER" />

    </resultMap>

    <resultMap id="ArticleVO" type="com.xiao.blog.vo.ArticleVO" extends="BaseResultMap">

        <id column="id" property="id" jdbcType="INTEGER" />
        <result column="article_digest" property="articleDigest" jdbcType="VARCHAR" />
        <result column="article_title" property="articleTitle" jdbcType="VARCHAR" />
        <result column="article_image" property="articleImage" jdbcType="VARCHAR" />
        <result column="article_url" property="articleUrl" jdbcType="VARCHAR" />
        <result column="article_content" property="articleContent" jdbcType="LONGVARCHAR" />
        <result column="article_html_content" property="articleHtmlContent" jdbcType="LONGVARCHAR" />
        <result column="create_date" property="createDate" jdbcType="VARCHAR" />
        <result column="update_date" property="updateDate" jdbcType="VARCHAR" />
        <result column="likes" property="likes" jdbcType="INTEGER" />
        <result column="top" property="top" jdbcType="INTEGER" />
        <result column="draft" property="draft" jdbcType="INTEGER" />
        <result column="privacy" property="privacy" jdbcType="INTEGER" />

        <association property="user" javaType="com.xiao.blog.model.User">
          <id column="user_id" property="id" jdbcType="INTEGER" />
          <result column="name" property="name" jdbcType="VARCHAR" />
        </association>

        <association property="categories" javaType="com.xiao.blog.model.Categories">
          <id column="categories_id" property="id" jdbcType="INTEGER" />
          <result column="categories_name" property="name" jdbcType="VARCHAR" />
        </association>

        <collection property="tagsList" ofType="com.xiao.blog.model.Tags"
                    select="com.xiao.blog.mapper.TagsMapper.getTagsListByArticle" column="id">
        </collection>

    </resultMap>


  <!--新增博客-->
  <insert id="insert" parameterType="com.xiao.blog.model.Article" >

    insert into blog_article (
        id,
        article_digest,
        article_title,
        article_url,
        article_image,
        create_date,
        last_article_id,
        top,
        draft,
        privacy,
        article_content,
        article_html_content,
        user_id,
        categories_id
      )
    values (
        #{id,jdbcType=INTEGER},
        #{articleDigest,jdbcType=VARCHAR},
        #{articleTitle,jdbcType=VARCHAR},
        #{articleUrl,jdbcType=VARCHAR},
        #{articleImage,jdbcType=VARCHAR},
        #{createDate,jdbcType=VARCHAR},
        #{lastArticleId,jdbcType=INTEGER},
        #{top,jdbcType=INTEGER},
        #{draft,jdbcType=INTEGER},
        #{privacy,jdbcType=INTEGER},
        #{articleContent,jdbcType=LONGVARCHAR},
        #{articleHtmlContent,jdbcType=LONGVARCHAR},
        #{userId,jdbcType=INTEGER},
        #{categoriesId,jdbcType=INTEGER}
      )
  </insert>

  <!--根据id删除博客 -->
  <delete id="delete" parameterType="java.lang.Integer" >
    delete from blog_article where id = #{id,jdbcType=INTEGER}
  </delete>

  <!-- 修改博客-->
  <update id="update" parameterType="com.xiao.blog.model.Article" >

    update blog_article
      <trim prefix="set" suffixOverrides=",">
          <if test="articleContent != null">
              article_content = #{articleContent,jdbcType=LONGVARCHAR},
          </if>
          <if test="articleHtmlContent != null">
              article_html_content = #{articleHtmlContent,jdbcType=LONGVARCHAR},
          </if>
          <if test="articleDigest != null">
              article_digest = #{articleDigest,jdbcType=VARCHAR},
          </if>
          <if test="articleTitle != null">
              article_title = #{articleTitle,jdbcType=VARCHAR},
          </if>
          <if test="lastArticleId != null">
              last_article_id = #{lastArticleId,jdbcType=INTEGER},
          </if>
          <if test="nextArticleId != null">
              next_article_id = #{nextArticleId,jdbcType=INTEGER},
          </if>
          <if test="categoriesId != null">
              categories_id = #{categoriesId,jdbcType=INTEGER},
          </if>
          <if test="top != null">
              top = #{top,jdbcType=INTEGER},
          </if>
          <if test="draft != null">
              top = #{draft,jdbcType=INTEGER},
          </if>
          <if test="privacy != null">
              top = #{privacy,jdbcType=INTEGER},
          </if>
      </trim>
    where id = #{id,jdbcType=INTEGER}
  </update>

    <!--根据条件查询博客 -->
    <select id="getPageArticleList" resultMap="ArticleVO" parameterType="com.xiao.blog.model.Article">

        select
            article.id,
            article.article_image,
            article.article_url,
            article.article_digest,
            article.article_title,
            article.create_date,
            article.user_id,
            article.privacy,
            article.draft,
            u.name user_name,
            article.categories_id,
            categories.name categories_name

        from blog_article article
        left join sys_user u on article.user_id = u.id
        left join blog_categories categories on article.categories_id = categories.id
        where 1 = 1
        <if test="id != null">
            and article.id = #{id,jdbcType=INTEGER}
        </if>
        <if test="draft != null">
            and article.draft = 0
        </if>
        <if test="privacy != null">
            and article.privacy = 0
        </if>
        <if test="categoriesId != null">
            and article.categories_id = #{categoriesId,jdbcType=INTEGER}
        </if>
        <if test="top != null">
            and article.top = #{top,jdbcType=INTEGER}
        </if>
        order by id desc

    </select>

    <select id="getArticleListByField" resultMap="ArticleVO" parameterType="com.xiao.blog.vo.ArticleVO">
        select
            article.id,
            article.article_image,
            article.article_url,
            article.article_digest,
            article.article_title,
            article.create_date,
            article.user_id,
            u.name user_name,
            article.categories_id,
            categories.name categories_name

        from blog_article article
        left join sys_user u on article.user_id = u.id
        left join blog_categories categories on article.categories_id = categories.id
        left join blog_article_tags bat on bat.article_id = article.id
        left join blog_tags tags on tags.id = bat.tags_id
        where 1 = 1
        <if test="id != null">
            and article.id = #{id,jdbcType=INTEGER}
        </if>
        <if test="draft != null">
            and article.draft = 0
        </if>
        <if test="privacy != null">
            and article.privacy = 0
        </if>
        <if test="categoriesId != null">
            and article.categories_id = #{categoriesId,jdbcType=INTEGER}
        </if>
        <if test="top != null">
            and article.top = #{top,jdbcType=INTEGER}
        </if>
        <if test="tagsId != null">
            and tags.id = #{tagsId,jdbcType=INTEGER}
        </if>

        order by id desc

    </select>

    <!--根据条件查询博客 -->
    <select id="getArticleById" resultMap="ArticleVO" parameterType="com.xiao.blog.vo.ArticleVO">

        select
            article.id,
            article.article_content,
            article.article_html_content,
            article.article_title,
            article.article_image,
            article.article_url,
            article.likes,
            article.create_date,
            article.draft,
            article.privacy,
            u.name name,
            article.categories_id,
            categories.name categories_name

        from blog_article article
        left join sys_user u on article.user_id = u.id
        left join blog_categories categories on article.categories_id = categories.id

        where article.id = #{id,jdbcType=INTEGER}

    </select>


    <resultMap id="Classify" type="com.xiao.blog.vo.ClassifyVO" >

        <result column="name" property="categoriesName" jdbcType="VARCHAR" />

        <collection property="articles" ofType="com.xiao.blog.vo.ArticleVO">

            <id column="id" property="id" jdbcType="INTEGER" />
            <result column="article_title" property="articleTitle" jdbcType="VARCHAR" />

        </collection>


    </resultMap>

</mapper>
