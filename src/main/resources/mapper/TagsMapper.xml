<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xiao.blog.mapper.TagsMapper" >

  <resultMap id="BaseResultMap" type="com.xiao.blog.model.Tags" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />

  </resultMap>

  <insert id="insert" parameterType="com.xiao.blog.model.Tags" >
    insert into blog_tags (id, `name`) values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR})
  </insert>

  <insert id="batchInsertTags" parameterType="com.xiao.blog.model.Tags" >
    insert into blog_tags (id, `name`)
        values
        <foreach collection ="tagsList" item="tags" index= "index" separator =",">
            (#{tags.id}, #{tags.name)
        </foreach >
  </insert>


  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from blog_tags where id = #{id,jdbcType=INTEGER}
  </delete>

  <update id="updateByPrimaryKey" parameterType="com.xiao.blog.model.Tags" >
    update blog_tags set `name` = #{name,jdbcType=VARCHAR} where id = #{id,jdbcType=INTEGER}
  </update>


  <select id="getAllTags" resultMap="BaseResultMap" parameterType="java.lang.Integer">
    select id, `name` from blog_tags
  </select>


  <resultMap id="TagsVO" type="com.xiao.blog.vo.TagsVO" extends="BaseResultMap">
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="text" property="text" jdbcType="VARCHAR" />
    <result column="weight" property="weight" jdbcType="INTEGER" />
  </resultMap>
  <select id="getTagsVOList" resultMap="TagsVO">
    select * from (
        select
           tags.id,
           tags.name,
           tags.name text,
           (select count(article_id) from blog_article_tags bat where bat.tags_id = tags.id) weight
        from blog_tags tags
    ) temp
    where temp.weight > 0
  </select>
</mapper>