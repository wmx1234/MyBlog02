<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xiao.blog.mapper.PermissionMapper" >
  <resultMap id="BaseResultMap" type="com.xiao.blog.model.Permission" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="url" property="url" jdbcType="VARCHAR" />
    <result column="icon" property="icon" jdbcType="VARCHAR" />
    <result column="description" property="description" jdbcType="VARCHAR" />
    <result column="parent_id" property="parentId" jdbcType="INTEGER" />
    <result column="open" property="open" jdbcType="VARCHAR" />

    <collection property="roles" ofType="com.xiao.blog.model.Role">
      <id column="role_id" property="id" jdbcType="INTEGER" />
      <result column="role_name" property="roleName" jdbcType="VARCHAR" />
    </collection>

  </resultMap>


  <resultMap id="PermissionTreeMap" type="com.xiao.blog.pojo.TreeModel" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="title" jdbcType="VARCHAR" />
    <result column="checked" property="checked" jdbcType="VARCHAR" />

  </resultMap>
  <!--新增权限-->
  <insert id="insert" parameterType="com.xiao.blog.model.Permission" >

    insert into sys_permission (id, `name`, url,
      icon, description,
      parent_id,  `open`
      )
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{url,jdbcType=VARCHAR},
      #{icon,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR},
      #{parentId,jdbcType=INTEGER},  #{open,jdbcType=VARCHAR}
      )
  </insert>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from sys_permission where id = #{id,jdbcType=INTEGER}
  </delete>

  <!--
  <delete id="deleteBatch" parameterType="java.util.List">
    delete from
    sys_permission
    where
    id IN
    <foreach collection="list" item="item" index="index" open="(" close=")" separator=",">
      #{item}
    </foreach>
  </delete>
-->

  <update id="updateByPrimaryKey" parameterType="com.xiao.blog.model.Permission" >

    update sys_permission
    set `name` = #{name,jdbcType=VARCHAR},
      url = #{url,jdbcType=VARCHAR},
      icon = #{icon,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      parent_id = #{parentId,jdbcType=INTEGER},
      `open` = #{open,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select id, `name`, url, icon, description, parent_id,  `open`
    from sys_permission
    where id = #{id,jdbcType=INTEGER}
  </select>

  <select id="getMenu" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select id, `name`, url, icon, description, parent_id,  `open`
    from sys_permission permission
    left join sys_role_permission srp on permission.id = srp.permission_id
    where srp.role_id = #{roleId,jdbcType=INTEGER} and permission.parent_id = 0

    order by id
  </select>

  <select id="selectAll" resultMap="BaseResultMap" >
    select permission.*,role.*
    from sys_permission permission
    left join sys_role_permission  srp on permission.id = srp.permission_id
    left join sys_role  role on role.id = srp.role_id
  </select>

  <select id="getPermissionsByParent" resultMap="BaseResultMap" parameterType="java.lang.Integer">
    select * from sys_permission where parent_id = #{parentId,jdbcType=INTEGER} order by id
  </select>

  <select id="getPermissionsByRole" resultMap="BaseResultMap" parameterType="java.lang.Integer" >

    select id, `name`, url, icon, description, parent_id,  `open`
    from sys_permission p
    left join sys_role_permission rp on rp.permission_id = p.id

    where rp.role_id = #{roleId,jdbcType=INTEGER}
  </select>

  <select id="getPermissionTree" resultMap="PermissionTreeMap">

    SELECT
        p1.id,
	    p1.`name`,
	    case when
          p1.id in (select permission_id from sys_role_permission where role_id = #{roleId,jdbcType=INTEGER})
          then 'checked'
          else '' end checked
    FROM
	    sys_permission p1
    WHERE
	     p1.parent_id = #{parentId,jdbcType=INTEGER}
	order by p1.id
  </select>


</mapper>